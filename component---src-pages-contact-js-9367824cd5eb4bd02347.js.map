{"version":3,"sources":["webpack:///./src/components/contact/imageSequence.js","webpack:///./src/pages/contact.js","webpack:///./src/components/common/fluidImgProps.js"],"names":["ImageSequence","timing","imageSequenceInterval","state","activeImage","componentDidMount","this","imageSequenceAnimate","componentWillUnmount","clearInterval","images","props","mod","contactOfficeImage","length","setTimeout","createSequenceInterval","col","setInterval","active","newActive","setState","render","undefined","className","map","officeImg","j","fluidImgProps","key","style","position","React","PureComponent","addTargetBlanks","string","replace","query","data","seomatic","craft","entries","seo","contactModules","i","contactTitle","parse","contactDetails","content","linkOneTitle","linkOneUrl","linkTwoTitle","linkTwoUrl","imgData","imageFile","url","imgSharp","childImageSharp","fluid","src","sizes","srcSet","aspectRatio","backgroundColor","colors","muted"],"mappings":"qnBAIqBA,E,4JACnBC,OAAS,I,EACTC,2B,IAEAC,MAAQ,CACNC,YAAa,G,oHAGfC,kBAAA,WACEC,KAAKC,wB,EAGPC,qBAAA,WACEC,cAAcH,KAAKJ,wB,EAGrBK,qBAAA,WAAwB,IAAD,OACfG,EAAM,EAAOJ,KAAKK,MAAMC,IAAIC,oBAE9BH,EAAOI,OAAS,GAClBC,YAAW,WACT,EAAKb,sBAAwB,EAAKc,uBAAuBN,KACvDJ,KAAKK,MAAMM,IAAMX,KAAKL,OAAU,I,EAIxCe,uBAAA,SAAuBN,GAAS,IAAD,OAC7B,OAAOQ,aAAY,WACjB,IAAMC,EAAS,EAAKhB,MAAMC,YAEtBgB,EAAYD,IAAWT,EAAOI,OAAS,EAAI,EAAIK,EAAS,EAE5D,EAAKE,SAAS,CAAEjB,YAAagB,MAC5Bd,KAAKL,S,EAGVqB,OAAA,WAAU,IAAD,SACchB,KAAKK,MAAlBC,EADD,EACCA,IAAKK,EADN,EACMA,IAEb,YAAYM,IAARX,EAGA,+BAAKY,UAAU,yBACZZ,EAAIC,mBAAmBY,KAAI,SAACC,EAAWC,GACtC,IAAMhB,EAAQiB,YAAcF,GAExBP,EAAS,EAAKhB,MAAMC,cAAgBuB,EAAI,UAAY,GAExD,OACE,wBAAC,IAAD,eACEE,IAAG,YAAcZ,EAAd,UAA2BU,EAC9BH,UAAS,+BAAiCL,EAC1CW,MAAO,CAAEC,SAAU,aACfpB,QAMF,M,GA3DyBqB,UAAMC,e,sCCGjD,IAAMC,EAAkB,SAAAC,GACtB,OAAOA,EAAOC,QAAQ,cAAe,+BA2C1BC,GAxCE,sBAAe,IAAZC,EAAW,EAAXA,KACVC,EAAWD,EAAKE,MAAMD,SACtBE,EAAUH,EAAKE,MAAMC,QAAQ,GAEnC,OACE,wBAAC,IAAD,CAAQjB,UAAU,UAAUkB,IAAKH,GAC/B,+BAAKf,UAAU,qBACZiB,EAAQE,eAAelB,KAAI,SAACb,EAAKgC,GAAN,OAC1B,+BAAKpB,UAAU,iBAAiBK,IAAKjB,EAAIiC,cACvC,wBAAC,EAAD,CAAejC,IAAKA,EAAKK,IAAK2B,IAE9B,+BAAKpB,UAAU,gBACb,8BAAIA,UAAU,gBAAgBZ,EAAIiC,cAClC,+BAAKrB,UAAU,mBACZsB,IAAMZ,EAAgBtB,EAAImC,eAAeC,YAI9C,+BAAKxB,UAAU,iBACZZ,EAAIqC,aACH,+BAAKzB,UAAU,qBACb,6BAAGA,UAAU,sBAAsBZ,EAAIqC,cACvC,oCAAOH,IAAMZ,EAAgBtB,EAAIsC,WAAWF,YAE5C,KAEHpC,EAAIuC,aACH,+BAAK3B,UAAU,qBACb,6BAAGA,UAAU,sBAAsBZ,EAAIuC,cACvC,oCAAOL,IAAMZ,EAAgBtB,EAAIwC,WAAWJ,YAE5C,aASA,c,kCCjDH,aAAAK,GAAY,IACjBC,EAAmBD,EAAnBC,UAAWC,EAAQF,EAARE,IACbC,EAAWF,GAAaA,EAAUG,gBAAkBH,EAAUG,gBAAkB,KAMtF,MAAO,CAAEC,MAJM,OAAbF,EAAoBA,EAASE,MAAQ,CAAEC,IAAKJ,EAAKK,MAAO,GAAIC,OAAQN,EAAKO,YAAa,MAIxEC,gBAFdT,GAAkC,OAArBA,EAAUU,OAAkBV,EAAUU,OAAOC,MAR/B","file":"component---src-pages-contact-js-9367824cd5eb4bd02347.js","sourcesContent":["import React from \"react\";\nimport Img from \"gatsby-image\";\nimport fluidImgProps from \"../common/fluidImgProps\";\n\nexport default class ImageSequence extends React.PureComponent {\n  timing = 5000;\n  imageSequenceInterval;\n\n  state = {\n    activeImage: 0,\n  };\n\n  componentDidMount() {\n    this.imageSequenceAnimate();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.imageSequenceInterval);\n  }\n\n  imageSequenceAnimate() {\n    const images = [...this.props.mod.contactOfficeImage];\n\n    if (images.length > 1) {\n      setTimeout(() => {\n        this.imageSequenceInterval = this.createSequenceInterval(images);\n      }, (this.props.col * this.timing) / 2); // to offset every even contact image\n    }\n  }\n\n  createSequenceInterval(images) {\n    return setInterval(() => {\n      const active = this.state.activeImage;\n\n      let newActive = active === images.length - 1 ? 0 : active + 1;\n\n      this.setState({ activeImage: newActive });\n    }, this.timing);\n  }\n\n  render() {\n    const { mod, col } = this.props;\n\n    if (mod !== undefined) {\n      // when building this is coming up as undefined for some reason\n      return (\n        <div className=\"contact-imageSequence\">\n          {mod.contactOfficeImage.map((officeImg, j) => {\n            const props = fluidImgProps(officeImg);\n\n            let active = this.state.activeImage === j ? \"-active\" : \"\";\n\n            return (\n              <Img\n                key={`sequence ${col} image ${j}`}\n                className={`contact-imageSequence-image ${active}`}\n                style={{ position: \"absolute\" }}\n                {...props}\n              />\n            );\n          })}\n        </div>\n      );\n    } else return null;\n  }\n}\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport parse from \"html-react-parser\";\n\nimport Layout from \"../components/common/layout\";\nimport ImageSequence from \"../components/contact/imageSequence\";\n\nconst addTargetBlanks = string => {\n  return string.replace(/href=\"http/g, 'target=\"_blank\" href=\"http');\n};\n\nexport default ({ data }) => {\n  const seomatic = data.craft.seomatic;\n  const entries = data.craft.entries[0];\n\n  return (\n    <Layout className=\"contact\" seo={seomatic}>\n      <div className=\"contact-container\">\n        {entries.contactModules.map((mod, i) => (\n          <div className=\"contact-column\" key={mod.contactTitle}>\n            <ImageSequence mod={mod} col={i} />\n\n            <div className=\"contact-text\">\n              <h2 className=\"contact-city\">{mod.contactTitle}</h2>\n              <div className=\"contact-details\">\n                {parse(addTargetBlanks(mod.contactDetails.content))}\n              </div>\n            </div>\n\n            <div className=\"contact-links\">\n              {mod.linkOneTitle ? (\n                <div className=\"contact-links-row\">\n                  <p className=\"contact-links-type\">{mod.linkOneTitle}</p>\n                  <span>{parse(addTargetBlanks(mod.linkOneUrl.content))}</span>\n                </div>\n              ) : null}\n\n              {mod.linkTwoTitle ? (\n                <div className=\"contact-links-row\">\n                  <p className=\"contact-links-type\">{mod.linkTwoTitle}</p>\n                  <span>{parse(addTargetBlanks(mod.linkTwoUrl.content))}</span>\n                </div>\n              ) : null}\n            </div>\n          </div>\n        ))}\n      </div>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query {\n    craft {\n      seomatic(uri: \"/contact\") {\n        metaTitleContainer\n        metaTagContainer\n        metaLinkContainer\n        metaScriptContainer\n        metaJsonLdContainer\n      }\n\n      entries(section: [contact]) {\n        ... on Craft_Contact {\n          contactModules {\n            ... on Craft_ContactModulesContacttitlemodule {\n              contactOfficeImage {\n                id\n                dateUpdated\n                url\n\n                ... on Craft_UploadsVolume {\n                  __typename\n                  imageFile {\n                    childImageSharp {\n                      fluid(maxWidth: 650) {\n                        src\n                        sizes\n                        srcSet\n                        srcWebp\n                        srcSetWebp\n                        aspectRatio\n                      }\n                    }\n\n                    colors {\n                      muted\n                    }\n                  }\n                }\n              }\n\n              contactTitle\n              contactDetails {\n                content\n              }\n              linkOneTitle\n              linkOneUrl {\n                content\n              }\n              linkTwoTitle\n              linkTwoUrl {\n                content\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","const defaultBackgroundColor = \"#efefef\";\n\nexport default imgData => {\n  const { imageFile, url } = imgData;\n  const imgSharp = imageFile && imageFile.childImageSharp ? imageFile.childImageSharp : null;\n  const fluid =\n    imgSharp !== null ? imgSharp.fluid : { src: url, sizes: \"\", srcSet: url, aspectRatio: 1.41 };\n  const backgroundColor =\n    imageFile && imageFile.colors !== null ? imageFile.colors.muted : defaultBackgroundColor;\n\n  return { fluid, backgroundColor };\n};\n"],"sourceRoot":""}